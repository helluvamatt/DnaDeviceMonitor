<Window x:Class="ModMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ModMonitor"
        xmlns:c="clr-namespace:ModMonitor.Converters"
        xmlns:vm="clr-namespace:ModMonitor.ViewModels"
        xmlns:p="clr-namespace:ModMonitor.Properties"
        xmlns:g="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=DotNetProjects.DataVisualization.Toolkit"
        xmlns:dv="clr-namespace:System.Windows.Controls.DataVisualization;assembly=DotNetProjects.DataVisualization.Toolkit"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Closed="Window_Closed"
        Title="Mod Monitor" Height="720" Width="1280">
    <Window.DataContext>
        <vm:MainViewModel SaveFileRequested="MainViewModel_SaveFileRequested" DevicePickerRequested="MainViewModel_DevicePickerRequested" EditSettingsRequested="MainViewModel_EditSettingsRequested" ShowAboutRequested="MainViewModel_ShowAboutRequested" />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <c:TemperatureConverter x:Key="temperatureConverter" />
            <c:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            <c:BooleanToVisibilityConverter x:Key="notBooleanToVisibilityConverter" Negate="True" />
            <c:ColorToSolidBrushConverter x:Key="colorToSolidBrushConverter" />
            <c:DateTimeConverter x:Key="timestampConverter" Format="yyyy-MM-dd HH:mm:ss.fff" />
            <Style TargetType="Label">
                <Setter Property="FontSize" Value="8pt" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="Label" x:Key="legendHeader">
                <Setter Property="FontSize" Value="10pt" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Padding" Value="2" />
            </Style>
            <Style TargetType="Label" x:Key="legendTitle" BasedOn="{StaticResource legendHeader}">
                <Setter Property="FontSize" Value="12pt" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type dv:Legend}" x:Key="hideLegendStyle">
                <Setter Property="Width" Value="0" />
                <Setter Property="Height" Value="0" />
            </Style>
            <Style x:Key="collapseControlStyle" TargetType="Control">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding ShowAboutCommand}" />
        <KeyBinding Key="F2" Command="{Binding ConnectCommand}" />
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Device">
                <MenuItem Header="{Binding ConnectText}" Command="{Binding ConnectCommand}" InputGestureText="F2">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="Plug" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="O_ptions" Command="{Binding EditSettingsCommand}">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="Cogs" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="E_xit" Click="exit_Click" InputGestureText="Alt+F4">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="SignOut" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About" Command="{Binding ShowAboutCommand}" InputGestureText="F1">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="InfoCircle" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="{Binding Status}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <Button DockPanel.Dock="Right" Content="{Binding ConnectText}" Command="{Binding ConnectCommand}" Padding="8,0,8,0" />
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="2" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Style="{StaticResource legendTitle}" Content="Live Data" />

                <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Style="{StaticResource legendHeader}" Content="Coil" />

                <DockPanel Grid.Column="0" Grid.Row="2" Background="{Binding Path=ColorPower, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowPower, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="2" Content="Power" />
                <Label Grid.Column="2" Grid.Row="2" Content="{Binding Path=LatestSample.Power, TargetNullValue=?, FallbackValue=?}" ContentStringFormat="{}{0} W"/>

                <DockPanel Grid.Column="0" Grid.Row="3" Background="{Binding ColorTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowTemperature, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="3" Content="Temperature" />
                <Label Grid.Column="2" Grid.Row="3" Content="{Binding Path=LatestSample.Temperature, Converter={StaticResource temperatureConverter}, FallbackValue=???}" />

                <DockPanel Grid.Column="0" Grid.Row="4" Background="{Binding ColorVoltage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowVoltage, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="4" Content="Voltage" />
                <Label Grid.Column="2" Grid.Row="4" Content="{Binding Path=LatestSample.Voltage, TargetNullValue=?, FallbackValue=?}" ContentStringFormat="{}{0} V" />

                <DockPanel Grid.Column="0" Grid.Row="5" Background="{Binding ColorCurrent, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowCurrent, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="5" Content="Current" />
                <Label Grid.Column="2" Grid.Row="5" Content="{Binding Path=LatestSample.Current, TargetNullValue=?, FallbackValue=?}" ContentStringFormat="{}{0} A" />

                <DockPanel Grid.Column="0" Grid.Row="6" Background="{Binding ColorLiveResistance, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowLiveResistance, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="6" Content="Live Resistance" />
                <Label Grid.Column="2" Grid.Row="6" Content="{Binding Path=LatestSample.LiveResistance, TargetNullValue=?, FallbackValue=?}" ContentStringFormat="{}{0} Ω" />

                <DockPanel Grid.Column="0" Grid.Row="7" Background="{Binding ColorColdResistance, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowColdResistance, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="7" Content="Cold Resistance" />
                <Label Grid.Column="2" Grid.Row="7" Content="{Binding Path=LatestSample.ColdResistance, TargetNullValue=?, FallbackValue=?}" ContentStringFormat="{}{0} Ω" />

                <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="8" Style="{StaticResource legendHeader}" Content="Battery" />

                <DockPanel Grid.Column="0" Grid.Row="9" Background="{Binding ColorBatteryLevel, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowBatteryLevel, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="9" Content="Battery Level" />
                <Label Grid.Column="2" Grid.Row="9" Content="{Binding Path=LatestSample.BatteryLevel, TargetNullValue=?, FallbackValue=?}" ContentStringFormat="{}{0}%" />

                <DockPanel Grid.Column="0" Grid.Row="10" Background="{Binding ColorBatteryVoltage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowBatteryVoltage, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="10" Content="Battery Voltage" />
                <Label Grid.Column="2" Grid.Row="10" Content="{Binding Path=LatestSample.BatteryVoltage, TargetNullValue=?, FallbackValue=?}" ContentStringFormat="{}{0:#0.00} V" />

                <Label Grid.Column="0" Grid.ColumnSpan="3"  Grid.Row="11" Style="{StaticResource legendHeader}" Content="Device" />

                <DockPanel Grid.Column="0" Grid.Row="12" Background="{Binding ColorBoardTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowBoardTemperature, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="12" Content="Board Temperature" />
                <Label Grid.Column="2" Grid.Row="12" Content="{Binding Path=LatestSample.BoardTemperature, Converter={StaticResource temperatureConverter}, FallbackValue=???}" />

                <DockPanel Grid.Column="0" Grid.Row="13" Background="{Binding ColorRoomTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowRoomTemperature, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="13" Content="Room Temperature" />
                <Label Grid.Column="2" Grid.Row="13" Content="{Binding Path=LatestSample.RoomTemperature, Converter={StaticResource temperatureConverter}, FallbackValue=???}" />

                <DockPanel Grid.Column="0" Grid.Row="14" Background="{Binding ColorPowerSetpoint, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowPowerSetpoint, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="14" Content="Power Setpoint" />
                <Label Grid.Column="2" Grid.Row="14" Content="{Binding Path=LatestSample.PowerSetpoint, TargetNullValue=?, FallbackValue=?}" ContentStringFormat="{}{0} W"/>

                <DockPanel Grid.Column="0" Grid.Row="15" Background="{Binding ColorTemperatureSetpoint, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                    <CheckBox IsChecked="{Binding ShowTemperatureSetpoint, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                </DockPanel>
                <Label Grid.Column="1" Grid.Row="15" Content="Temperature Setpoint" />
                <Label Grid.Column="2" Grid.Row="15" Content="{Binding Path=LatestSample.TemperatureSetpoint, Converter={StaticResource temperatureConverter}, FallbackValue=???}" />

                <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="16" Style="{StaticResource legendHeader}" Content="Sample" />
                
                <Label Grid.Column="1" Grid.Row="17" Content="Timestamp" />
                <Label Grid.Column="2" Grid.Row="17" Content="{Binding Path=LatestSample.End, Converter={StaticResource timestampConverter}}" />

                <Label Grid.Column="1" Grid.Row="18" Content="Sample Delay" ToolTip="Time in milliseconds between samples on the graph." />
                <Label Grid.Column="2" Grid.Row="18" Content="{Binding Path=SampleThrottle, Source={x:Static p:Settings.Default}}" ContentStringFormat="{}{0} ms" />

                <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="19" Style="{StaticResource legendHeader}" Content="Device Information" />

                <Label Grid.Column="1" Grid.Row="20" Content="Manufacturer" />
                <Label Grid.Column="2" Grid.Row="20" Content="{Binding Path=CurrentDevice.Manufacturer}" />

                <Label Grid.Column="1" Grid.Row="21" Content="Board Name" />
                <Label Grid.Column="2" Grid.Row="21" Content="{Binding Path=CurrentDevice.ProductName}"/>

                <Label Grid.Column="1" Grid.Row="22" Content="Serial Number" />
                <Label Grid.Column="2" Grid.Row="22" Content="{Binding Path=CurrentDevice.SerialNumber}" />

                <Label Grid.Column="1" Grid.Row="23" Content="Firmware Version" />
                <Label Grid.Column="2" Grid.Row="23" Content="{Binding Path=CurrentDevice.FirmwareVersion}" />

                <Label Grid.Column="1" Grid.Row="24" Content="Max Power" ToolTip="Max power for known devices, affects the power scale on the graph" />
                <Label Grid.Column="2" Grid.Row="24" Content="{Binding Path=CurrentDevice.MaxPower}" ContentStringFormat="{}{0} W" />

                <Label Grid.Column="1" Grid.Row="25" Content="Buttons" />
                <Label Grid.Column="2" Grid.Row="25" Content="{Binding Path=LatestSample.Buttons}" />

                <DockPanel Grid.Column="0" Grid.Row="26" Grid.ColumnSpan="3" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="8">
                    <Button DockPanel.Dock="Right" Padding="5 5 5 5" Foreground="Red" Margin="5 0 0 0" Visibility="{Binding IsRecording, Converter={StaticResource notBooleanToVisibilityConverter}}" Command="{Binding StartRecordingCommand}">
                        <fa:FontAwesome Icon="Circle" />
                    </Button>
                    <Button DockPanel.Dock="Right" Padding="5 5 5 5" Margin="5 0 0 0" Visibility="{Binding IsRecording, Converter={StaticResource booleanToVisibilityConverter}}" Command="{Binding StopRecordingCommand}">
                        <fa:FontAwesome Icon="Square" />
                    </Button>
                    <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="Red" Visibility="{Binding IsRecording, Converter={StaticResource booleanToVisibilityConverter}}">Recording In Progress...</TextBlock>
                </DockPanel>

            </Grid>
            <GridSplitter Grid.Column="1" Grid.Row="0" Margin="5 0 5 0" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="DarkGray" ShowsPreview="True" Width="2" Cursor="SizeWE" />

            <g:Chart Grid.Column="0" Grid.Row="0" LegendStyle="{StaticResource hideLegendStyle}" BorderThickness="0" Title="Current Puff" Padding="8 0 8 8">
                <g:Chart.TitleStyle>
                    <Style TargetType="dv:Title">
                        <Setter Property="FontSize" Value="12pt" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="2" />
                    </Style>
                </g:Chart.TitleStyle>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.Temperature.Value" DependentRangeAxis="{Binding ElementName=yAxisSingleTemperature}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowTemperature, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}"/>
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.TemperatureSetpoint.Value" DependentRangeAxis="{Binding ElementName=yAxisSingleTemperature}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowTemperatureSetpoint, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorTemperatureSetpoint, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}"/>
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.Power" DependentRangeAxis="{Binding ElementName=yAxisSinglePower}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowPower, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorPower, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}"/>
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.PowerSetpoint" DependentRangeAxis="{Binding ElementName=yAxisSinglePower}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowPowerSetpoint, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorPowerSetpoint, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}"/>
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.Voltage" DependentRangeAxis="{Binding ElementName=yAxisSingleVoltage}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowVoltage, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorVoltage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.Current" DependentRangeAxis="{Binding ElementName=yAxisSingleCurrent}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowCurrent, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorCurrent, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.LiveResistance" DependentRangeAxis="{Binding ElementName=yAxisSingleResistance}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowLiveResistance, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorLiveResistance, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.ColdResistance" DependentRangeAxis="{Binding ElementName=yAxisSingleResistance}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowColdResistance, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorColdResistance, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.BatteryVoltage" DependentRangeAxis="{Binding ElementName=yAxisSingleVoltage}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowBatteryVoltage, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorBatteryVoltage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.BoardTemperature.Value" DependentRangeAxis="{Binding ElementName=yAxisSingleTemperatureLow}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowBoardTemperature, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorBoardTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.RoomTemperature.Value" DependentRangeAxis="{Binding ElementName=yAxisSingleTemperatureLow}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowRoomTemperature, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorRoomTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:Chart.Axes>
                    <g:LinearAxis Orientation="X" Minimum="0" Maximum="10" Interval="1">
                        <g:LinearAxis.AxisLabelStyle>
                            <Style TargetType="g:AxisLabel">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="g:AxisLabel">
                                            <TextBlock DataContext="{TemplateBinding FormattedContent}" Text="{Binding StringFormat={}{0} s}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </g:LinearAxis.AxisLabelStyle>
                    </g:LinearAxis>
                    <g:LinearAxis x:Name="yAxisSingleTemperature" Orientation="Y" Minimum="0" Maximum="{Binding MaxTemp.Value}">
                        <g:LinearAxis.Title>
                            <TextBlock Text="{Binding TemperatureUnit, StringFormat={}Temperature (º{0}), Source={x:Static p:Settings.Default}, Mode=OneWay}" />
                        </g:LinearAxis.Title>
                    </g:LinearAxis>
                    <g:LinearAxis x:Name="yAxisSingleTemperatureLow" Orientation="Y" Minimum="0" Maximum="{Binding MaxTempLow.Value}">
                        <g:LinearAxis.Title>
                            <TextBlock Text="{Binding TemperatureUnit, StringFormat={}Temperature (º{0}), Source={x:Static p:Settings.Default}, Mode=OneWay}" />
                        </g:LinearAxis.Title>
                    </g:LinearAxis>
                    <g:LinearAxis x:Name="yAxisSinglePower" Orientation="Y" Title="Power (W)" Minimum="0" Maximum="{Binding MaxPower}" />
                    <g:LinearAxis x:Name="yAxisSingleVoltage" Orientation="Y" Title="Voltage (V)" Minimum="0" Maximum="10" />
                    <g:LinearAxis x:Name="yAxisSingleCurrent" Orientation="Y" Title="Current (A)" Minimum="0" Maximum="40" />
                    <g:LinearAxis x:Name="yAxisSingleResistance" Orientation="Y" Title="Resistance (Ω)" Minimum="0" Maximum="3" />
                </g:Chart.Axes>
            </g:Chart>
        </Grid>
    </DockPanel>
</Window>
