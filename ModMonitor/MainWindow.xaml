<Window x:Class="ModMonitor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:local="clr-namespace:ModMonitor"
        xmlns:c="clr-namespace:ModMonitor.Converters"
        xmlns:vm="clr-namespace:ModMonitor.ViewModels"
        xmlns:p="clr-namespace:ModMonitor.Properties"
        xmlns:g="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=DotNetProjects.DataVisualization.Toolkit"
        xmlns:dv="clr-namespace:System.Windows.Controls.DataVisualization;assembly=DotNetProjects.DataVisualization.Toolkit"
        xmlns:dvp="clr-namespace:System.Windows.Controls.DataVisualization.Charting.Primitives;assembly=DotNetProjects.DataVisualization.Toolkit"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        Closed="Window_Closed"
        Title="Mod Monitor" Height="720" Width="1280">
    <Window.DataContext>
        <vm:MainViewModel SaveFileRequested="MainViewModel_SaveFileRequested" DevicePickerRequested="MainViewModel_DevicePickerRequested" EditSettingsRequested="MainViewModel_EditSettingsRequested" ShowAboutRequested="MainViewModel_ShowAboutRequested" SetTemperaturePromptRequested="MainViewModel_SetTemperaturePromptRequested" SetPowerPromptRequested="MainViewModel_SetPowerPromptRequested" SetProfilePromptRequested="MainViewModel_SetProfilePromptRequested" FirePromptRequested="MainViewModel_FirePromptRequested" />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <c:TemperatureConverter x:Key="temperatureConverter" Unit="{Binding MaxTemp.Unit}" />
            <c:TemperatureToStringConverter x:Key="temperatureToStringConverter" Unit="{Binding MaxTemp.Unit}" />
            <c:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
            <c:BooleanToVisibilityConverter x:Key="notBooleanToVisibilityConverter" Negate="True" />
            <c:ColorToSolidBrushConverter x:Key="colorToSolidBrushConverter" />
            <c:DateTimeConverter x:Key="timestampConverter" Format="yyyy-MM-dd HH:mm:ss.fff" />
            <c:DoubleNegationConverter x:Key="doubleNegationConverter" />
            <c:IsNullToVisibilityConverter x:Key="isNullToVisibilityConverter" />
            <c:IsNullToVisibilityConverter x:Key="isNullToVisibilityConverterNegate" Negate="True" />
            <c:BooleanToLengthConverter x:Key="booleanToLengthConverter" />
            <Style TargetType="Label">
                <Setter Property="FontSize" Value="8pt" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="Label" x:Key="legendHeader">
                <Setter Property="FontSize" Value="10pt" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Padding" Value="2" />
            </Style>
            <Style TargetType="Label" x:Key="legendTitle" BasedOn="{StaticResource legendHeader}">
                <Setter Property="FontSize" Value="12pt" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>
            <Style x:Key="collapseControlStyle" TargetType="Control">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
            <Style x:Key="shadeStyle" TargetType="Rectangle">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Fill" Value="Black" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="Panel.ZIndex" Value="5" />
            </Style>
            <Style x:Key="dialogContainerStyle" TargetType="Border">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Panel.ZIndex" Value="10" />
                <Setter Property="Background" Value="White" />
                <Setter Property="CornerRadius" Value="3" />
                <Setter Property="BorderBrush" Value="Silver" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Padding" Value="6" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F1" Command="{Binding ShowAboutCommand}" />
        <KeyBinding Key="F2" Command="{Binding ConnectCommand}" />
    </Window.InputBindings>
    <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Panel.ZIndex="0">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Device">
                <MenuItem Header="{Binding ConnectText}" Command="{Binding ConnectCommand}" InputGestureText="F2">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="Plug" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="Set Temperature..." Command="{Binding SetTemperatureCommand}">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="ThermometerHalf" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Set Power..." Command="{Binding SetPowerCommand}">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="Bolt" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Set Profile..." Command="{Binding SetProfileCommand}">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="Cog" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Start Puff..." Command="{Binding FireCommand}">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="Cloud" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="O_ptions..." Command="{Binding EditSettingsCommand}">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="Cogs" />
                    </MenuItem.Icon>
                </MenuItem>
                <Separator />
                <MenuItem Header="E_xit" Click="exit_Click" InputGestureText="Alt+F4">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="WindowClose" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem Header="_About" Command="{Binding ShowAboutCommand}" InputGestureText="F1">
                    <MenuItem.Icon>
                        <fa:ImageAwesome Icon="InfoCircle" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock Text="{Binding Status}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <Button DockPanel.Dock="Right" Content="{Binding ConnectText}" Command="{Binding ConnectCommand}" Padding="8,0,8,0" />
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="2" Grid.Row="0" ClipToBounds="True" x:Name="container">
                <DockPanel>
                    <DockPanel.RenderTransform>
                        <TranslateTransform x:Name="statisticsPanelTranslation" X="{Binding ElementName=container, Path=ActualWidth}" />
                    </DockPanel.RenderTransform>
                    <DockPanel DockPanel.Dock="Top">
                        <Button DockPanel.Dock="Left" Padding="8 2 8 2" Margin="3 3 3 3" Command="{Binding LiveDataModeCommand}">
                            <TextBlock>
                                <Span><fa:FontAwesome Icon="ChevronLeft" /></Span>
                                <Span>Live Data</Span>
                            </TextBlock>
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="liveDataPanelTranslation" Storyboard.TargetProperty="X" From="{Binding ElementName=container, Path=ActualWidth, Converter={StaticResource doubleNegationConverter}, Mode=OneWay}" To="0" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="statisticsPanelTranslation" Storyboard.TargetProperty="X" From="0" To="{Binding ElementName=container, Path=ActualWidth, Mode=OneWay}" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Label Style="{StaticResource legendTitle}" Content="Statistics" />
                    </DockPanel>

                    <DockPanel DockPanel.Dock="Bottom" Grid.Column="0" Grid.Row="26" Grid.ColumnSpan="3" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="8">
                        <Button DockPanel.Dock="Right" Padding="5 5 5 5" Margin="5 0 0 0" Command="{Binding RefreshStatisticsCommand}">
                            <fa:FontAwesome Icon="Refresh" />
                        </Button>
                        <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="Red" Visibility="{Binding IsDownloadingStatistics, Converter={StaticResource booleanToVisibilityConverter}}">Downloading statistics from device...</TextBlock>
                    </DockPanel>

                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="3 0 0 0">
                        <Grid IsEnabled="{Binding IsDownloadingStatistics, Converter={StaticResource notBooleanToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.Column="1">Since Reset</Label>
                            <Label Grid.Row="0" Grid.Column="2">Device</Label>

                            <Label Grid.Row="1" Grid.ColumnSpan="3" Style="{StaticResource legendHeader}">Puffs</Label>

                            <Label Grid.Row="2" Grid.Column="0">Temp. Protected</Label>
                            <Label Grid.Row="2" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.TemperatureProtectedPuffs, FallbackValue=N/A}" />
                            <Label Grid.Row="2" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceTemperatureProtectedPuffs, FallbackValue=N/A}" />

                            <Label Grid.Row="3" Grid.Column="0">Total</Label>
                            <Label Grid.Row="3" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.Puffs, FallbackValue=N/A}" />
                            <Label Grid.Row="3" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DevicePuffs, FallbackValue=N/A}" />

                            <Label Grid.Row="4" Grid.ColumnSpan="3" Style="{StaticResource legendHeader}">Energy</Label>

                            <Label Grid.Row="5" Grid.Column="0">Mean</Label>
                            <Label Grid.Row="5" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.MeanEnergy, FallbackValue=N/A}" ContentStringFormat="{}{0} mWh" />
                            <Label Grid.Row="5" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceMeanEnergy, FallbackValue=N/A}" ContentStringFormat="{}{0} mWh" />

                            <Label Grid.Row="6" Grid.Column="0">Std. Dev.</Label>
                            <Label Grid.Row="6" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.StdDevEnergy, FallbackValue=N/A}" ContentStringFormat="{}{0} mWh" />
                            <Label Grid.Row="6" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceStdDevEnergy, FallbackValue=N/A}" ContentStringFormat="{}{0} mWh" />

                            <Label Grid.Row="7" Grid.Column="0">Total</Label>
                            <Label Grid.Row="7" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.TotalEnergy, FallbackValue=N/A}" ContentStringFormat="{}{0} mWh" />
                            <Label Grid.Row="7" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceTotalEnergy, FallbackValue=N/A}" ContentStringFormat="{}{0} mWh" />

                            <Label Grid.Row="8" Grid.ColumnSpan="3" Style="{StaticResource legendHeader}">Power</Label>

                            <Label Grid.Row="9" Grid.Column="0">Mean</Label>
                            <Label Grid.Row="9" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.MeanPower, FallbackValue=N/A}" ContentStringFormat="{}{0} W" />
                            <Label Grid.Row="9" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceMeanPower, FallbackValue=N/A}" ContentStringFormat="{}{0} W" />

                            <Label Grid.Row="10" Grid.Column="0">Std. Dev.</Label>
                            <Label Grid.Row="10" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.StdDevPower, FallbackValue=N/A}" ContentStringFormat="{}{0} W" />
                            <Label Grid.Row="10" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceStdDevPower, FallbackValue=N/A}" ContentStringFormat="{}{0} W" />

                            <Label Grid.Row="11" Grid.ColumnSpan="3" Style="{StaticResource legendHeader}">Temperature</Label>

                            <Label Grid.Row="12" Grid.Column="0">Mean</Label>
                            <Label Grid.Row="12" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.MeanTemperature, FallbackValue=N/A, Converter={StaticResource temperatureToStringConverter}}" />
                            <Label Grid.Row="12" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceMeanTemperature, FallbackValue=N/A, Converter={StaticResource temperatureToStringConverter}}" />

                            <Label Grid.Row="13" Grid.Column="0">Std. Dev.</Label>
                            <Label Grid.Row="13" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.StdDevTemperature, FallbackValue=N/A, Converter={StaticResource temperatureToStringConverter}}" />
                            <Label Grid.Row="13" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceStdDevTemperature, FallbackValue=N/A, Converter={StaticResource temperatureToStringConverter}}" />

                            <Label Grid.Row="14" Grid.ColumnSpan="3" Style="{StaticResource legendHeader}">Temperature Peak</Label>

                            <Label Grid.Row="15" Grid.Column="0">Mean</Label>
                            <Label Grid.Row="15" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.MeanTemperaturePeak, FallbackValue=N/A, Converter={StaticResource temperatureToStringConverter}}" />
                            <Label Grid.Row="15" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceMeanTemperaturePeak, FallbackValue=N/A, Converter={StaticResource temperatureToStringConverter}}" />

                            <Label Grid.Row="16" Grid.Column="0">Std. Dev.</Label>
                            <Label Grid.Row="16" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.StdDevTemperaturePeak, FallbackValue=N/A, Converter={StaticResource temperatureToStringConverter}}" />
                            <Label Grid.Row="16" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceStdDevTemperaturePeak, FallbackValue=N/A, Converter={StaticResource temperatureToStringConverter}}" />

                            <Label Grid.Row="17" Grid.ColumnSpan="3" Style="{StaticResource legendHeader}">Time</Label>

                            <Label Grid.Row="18" Grid.Column="0">Mean</Label>
                            <Label Grid.Row="18" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.MeanTime, FallbackValue=N/A}" ContentStringFormat="{}{0} s" />
                            <Label Grid.Row="18" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceMeanTime, FallbackValue=N/A}" ContentStringFormat="{}{0} s" />

                            <Label Grid.Row="19" Grid.Column="0">Std. Dev.</Label>
                            <Label Grid.Row="19" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.StdDevTime, FallbackValue=N/A}" ContentStringFormat="{}{0} s" />
                            <Label Grid.Row="19" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceStdDevTime, FallbackValue=N/A}" ContentStringFormat="{}{0} s" />

                            <Label Grid.Row="20" Grid.Column="0">Total</Label>
                            <Label Grid.Row="20" Grid.Column="1" Content="{Binding LatestDetailedStatisticsSample.TotalTime, FallbackValue=N/A}" ContentStringFormat="{}{0} s" />
                            <Label Grid.Row="20" Grid.Column="2" Content="{Binding LatestDetailedStatisticsSample.DeviceTotalTime, FallbackValue=N/A}" ContentStringFormat="{}{0} s" />

                            <Label Grid.Row="21" Grid.ColumnSpan="3" Style="{StaticResource legendHeader}">Device</Label>

                            <Label Grid.Row="22" Grid.Column="0">Resets</Label>
                            <Label Grid.Row="23" Grid.Column="1" Grid.ColumnSpan="2" Content="{Binding LatestDetailedStatisticsSample.Resets, FallbackValue=N/A}" />


                        </Grid>
                    </ScrollViewer>

                </DockPanel>
                <DockPanel>
                    <DockPanel.RenderTransform>
                        <TranslateTransform x:Name="liveDataPanelTranslation" X="0" />
                    </DockPanel.RenderTransform>
                    <DockPanel DockPanel.Dock="Top">
                        <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Padding="8 2 8 2" Margin="3 3 3 3" Command="{Binding StatisticsModeCommand}">
                            <TextBlock>
                                <Span>Statistics</Span>
                                <Span><fa:FontAwesome Icon="ChevronRight" /></Span>
                            </TextBlock>
                            <Button.Triggers>
                                <EventTrigger RoutedEvent="ButtonBase.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="liveDataPanelTranslation" Storyboard.TargetProperty="X" From="0" To="{Binding ElementName=container, Path=ActualWidth, Converter={StaticResource doubleNegationConverter}, Mode=OneWay}" Duration="0:0:0.2" />
                                            <DoubleAnimation Storyboard.TargetName="statisticsPanelTranslation" Storyboard.TargetProperty="X" From="{Binding ElementName=container, Path=ActualWidth, Mode=OneWay}" To="0" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Label Style="{StaticResource legendTitle}" Content="Live Data" />
                    </DockPanel>

                    <DockPanel DockPanel.Dock="Bottom" Grid.Column="0" Grid.Row="26" Grid.ColumnSpan="3" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="8">
                        <Button DockPanel.Dock="Right" Padding="5 5 5 5" Foreground="Red" Margin="5 0 0 0" Visibility="{Binding IsRecording, Converter={StaticResource notBooleanToVisibilityConverter}}" Command="{Binding StartRecordingCommand}">
                            <fa:FontAwesome Icon="Circle" />
                        </Button>
                        <Button DockPanel.Dock="Right" Padding="5 5 5 5" Margin="5 0 0 0" Visibility="{Binding IsRecording, Converter={StaticResource booleanToVisibilityConverter}}" Command="{Binding StopRecordingCommand}">
                            <fa:FontAwesome Icon="Square" />
                        </Button>
                        <TextBlock HorizontalAlignment="Stretch" VerticalAlignment="Center" Foreground="Red" Visibility="{Binding IsRecording, Converter={StaticResource booleanToVisibilityConverter}}">Recording In Progress...</TextBlock>
                    </DockPanel>

                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="3 0 0 0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                                <RowDefinition Height="auto" />
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Grid.ColumnSpan="3" Style="{StaticResource legendHeader}" Content="Last Puff" />

                            <!-- Row 1: Time -->
                            <Label Grid.Column="1" Grid.Row="1" Content="Duration" />
                            <Label Grid.Column="2" Grid.Row="1" Content="{Binding CurrentPuffDuration, FallbackValue=0}" ContentStringFormat="{}{0:0.0} s" />

                            <!-- Row 2: Temperature -->
                            <Label Grid.Column="1" Grid.Row="2" Content="Temperature" />
                            <Label Grid.Column="2" Grid.Row="2" Content="{Binding LatestStatisticSample.LastTemperature, Converter={StaticResource temperatureToStringConverter}}" />

                            <!-- Row 3: Power -->
                            <Label Grid.Column="1" Grid.Row="3" Content="Power" />
                            <Label Grid.Column="2" Grid.Row="3" Content="{Binding LatestStatisticSample.LastPower, TargetNullValue=N/A, FallbackValue=N/A}" ContentStringFormat="{}{0} W" />

                            <!-- Row 4: Temperature Peak (calculated, since the value from the device is not reliably provided -->
                            <Label Grid.Column="1" Grid.Row="4" Content="Peak Temperature" />
                            <Label Grid.Column="2" Grid.Row="4" Content="{Binding PeakTemperature, Converter={StaticResource temperatureToStringConverter}}" />

                            <!-- Row 5: Energy -->
                            <Label Grid.Column="1" Grid.Row="5" Content="Energy" />
                            <Label Grid.Column="2" Grid.Row="5" Content="{Binding LatestStatisticSample.LastEnergy, TargetNullValue=N/A, FallbackValue=N/A}" ContentStringFormat="{}{0} mWh" />

                            <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="6" Style="{StaticResource legendHeader}" Content="Coil" />

                            <DockPanel Grid.Column="0" Grid.Row="7" Background="{Binding Path=ColorPower, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowPower, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="7" Content="Power" />
                            <Label Grid.Column="2" Grid.Row="7" Content="{Binding Path=LatestSample.Power, TargetNullValue=?, FallbackValue=?}" ContentStringFormat="{}{0} W"/>

                            <DockPanel Grid.Column="0" Grid.Row="8" Background="{Binding ColorTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowTemperature, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="8" Content="Temperature" />
                            <Label Grid.Column="2" Grid.Row="8" Content="{Binding Path=LatestSample.Temperature, Converter={StaticResource temperatureToStringConverter}}" />

                            <DockPanel Grid.Column="0" Grid.Row="9" Background="{Binding ColorVoltage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowVoltage, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="9" Content="Voltage" />
                            <Label Grid.Column="2" Grid.Row="9" Content="{Binding Path=LatestSample.Voltage, TargetNullValue=N/A, FallbackValue=N/A}" ContentStringFormat="{}{0} V" />

                            <DockPanel Grid.Column="0" Grid.Row="10" Background="{Binding ColorCurrent, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowCurrent, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="10" Content="Current" />
                            <Label Grid.Column="2" Grid.Row="10" Content="{Binding Path=LatestSample.Current, TargetNullValue=N/A, FallbackValue=N/A}" ContentStringFormat="{}{0} A" />

                            <DockPanel Grid.Column="0" Grid.Row="11" Background="{Binding ColorLiveResistance, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowLiveResistance, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="11" Content="Live Resistance" />
                            <Label Grid.Column="2" Grid.Row="11" Content="{Binding Path=LatestSample.LiveResistance, TargetNullValue=N/A, FallbackValue=N/A}" ContentStringFormat="{}{0} Ω" />

                            <DockPanel Grid.Column="0" Grid.Row="12" Background="{Binding ColorColdResistance, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowColdResistance, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="12" Content="Cold Resistance" />
                            <Label Grid.Column="2" Grid.Row="12" Content="{Binding Path=LatestSample.ColdResistance, TargetNullValue=N/A, FallbackValue=N/A}" ContentStringFormat="{}{0} Ω" />

                            <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="13" Style="{StaticResource legendHeader}" Content="Battery" />

                            <DockPanel Grid.Column="0" Grid.Row="14" Background="{Binding ColorBatteryLevel, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowBatteryLevel, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="14" Content="Battery Level" />
                            <Label Grid.Column="2" Grid.Row="14" Content="{Binding Path=LatestSample.BatteryLevel, TargetNullValue=N/A, FallbackValue=N/A}" ContentStringFormat="{}{0}%" />

                            <DockPanel Grid.Column="0" Grid.Row="15" Background="{Binding ColorBatteryVoltage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowBatteryVoltage, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="15" Content="Battery Voltage" />
                            <Label Grid.Column="2" Grid.Row="15" Content="{Binding Path=LatestSample.BatteryVoltage, TargetNullValue=N/A, FallbackValue=N/A}" ContentStringFormat="{}{0:#0.00} V" />

                            <Label Grid.Column="0" Grid.ColumnSpan="3"  Grid.Row="16" Style="{StaticResource legendHeader}" Content="Device" />

                            <DockPanel Grid.Column="0" Grid.Row="17" Background="{Binding ColorBoardTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowBoardTemperature, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="17" Content="Board Temperature" />
                            <Label Grid.Column="2" Grid.Row="17" Content="{Binding Path=LatestSample.BoardTemperature, Converter={StaticResource temperatureToStringConverter}, FallbackValue=?}" />

                            <DockPanel Grid.Column="0" Grid.Row="18" Background="{Binding ColorRoomTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowRoomTemperature, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="18" Content="Room Temperature" />
                            <Label Grid.Column="2" Grid.Row="18" Content="{Binding Path=LatestSample.RoomTemperature, Converter={StaticResource temperatureToStringConverter}, FallbackValue=?}" />

                            <DockPanel Grid.Column="0" Grid.Row="19" Background="{Binding ColorPowerSetpoint, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowPowerSetpoint, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="19" Content="Power Setpoint" />
                            <Label Grid.Column="2" Grid.Row="19">
                                <Hyperlink Command="{Binding SetPowerCommand}">
                                    <TextBlock Text="{Binding Path=LatestSample.PowerSetpoint, TargetNullValue=?, FallbackValue=?, StringFormat={}{0} W}" />
                                </Hyperlink>
                            </Label>

                            <DockPanel Grid.Column="0" Grid.Row="20" Background="{Binding ColorTemperatureSetpoint, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}">
                                <CheckBox IsChecked="{Binding ShowTemperatureSetpoint, Source={x:Static p:Settings.Default}, Mode=TwoWay}" VerticalAlignment="Center" Margin="3" />
                            </DockPanel>
                            <Label Grid.Column="1" Grid.Row="20" Content="Temperature Setpoint" />
                            <Label Grid.Column="2" Grid.Row="20">
                                <Hyperlink Command="{Binding SetTemperatureCommand}">
                                    <TextBlock Text="{Binding Path=LatestSample.TemperatureSetpoint, Converter={StaticResource temperatureToStringConverter}}" Visibility="{Binding LatestSample.TemperatureSetpoint, Converter={StaticResource isNullToVisibilityConverter}}" />
                                    <TextBlock FontStyle="Italic" Visibility="{Binding LatestSample.TemperatureSetpoint, Converter={StaticResource isNullToVisibilityConverterNegate}}">TC Disabled</TextBlock>
                                </Hyperlink>
                            </Label>

                            <Label Grid.Column="1" Grid.Row="21" Content="Profile" />
                            <Label Grid.Column="2" Grid.Row="21">
                                <Hyperlink Command="{Binding SetProfileCommand}">
                                    <TextBlock Text="{Binding Path=LatestSample.Profile, FallbackValue=N/A}" />
                                </Hyperlink>
                            </Label>

                            <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="22" Style="{StaticResource legendHeader}" Content="Sample" />

                            <Label Grid.Column="1" Grid.Row="23" Content="Timestamp" />
                            <Label Grid.Column="2" Grid.Row="23" Content="{Binding Path=LatestSample.End, Converter={StaticResource timestampConverter}}" />

                            <Label Grid.Column="1" Grid.Row="24" Content="Sample Delay" ToolTip="Time in milliseconds between samples on the graph." />
                            <Label Grid.Column="2" Grid.Row="24" Content="{Binding Path=SampleThrottle, Source={x:Static p:Settings.Default}}" ContentStringFormat="{}{0} ms" />

                            <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="25" Style="{StaticResource legendHeader}" Content="Device Information" />

                            <Label Grid.Column="1" Grid.Row="26" Content="Manufacturer" />
                            <Label Grid.Column="2" Grid.Row="26" Content="{Binding Path=CurrentDevice.Manufacturer, FallbackValue=N/A}" />

                            <Label Grid.Column="1" Grid.Row="27" Content="Board Name" />
                            <Label Grid.Column="2" Grid.Row="27" Content="{Binding Path=CurrentDevice.ProductName, FallbackValue=N/A}"/>

                            <Label Grid.Column="1" Grid.Row="28" Content="Serial Number" />
                            <Label Grid.Column="2" Grid.Row="28" Content="{Binding Path=CurrentDevice.SerialNumber, FallbackValue=N/A}" />

                            <Label Grid.Column="1" Grid.Row="29" Content="Firmware Version" />
                            <Label Grid.Column="2" Grid.Row="29" Content="{Binding Path=CurrentDevice.FirmwareVersion, FallbackValue=N/A}" />

                            <Label Grid.Column="1" Grid.Row="30" Content="Max Power" ToolTip="Max power for known devices, affects the power scale on the graph" />
                            <Label Grid.Column="2" Grid.Row="30" Content="{Binding Path=CurrentDevice.MaxPower, FallbackValue=N/A}" ContentStringFormat="{}{0} W" />

                            <Label Grid.Column="1" Grid.Row="31" Content="Buttons" />
                            <Label Grid.Column="2" Grid.Row="31" Content="{Binding Path=LatestSample.Buttons, FallbackValue=N/A}" />

                        </Grid>
                    </ScrollViewer>
                </DockPanel>
            </Grid>

            <GridSplitter Grid.Column="1" Grid.Row="0" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="DarkGray" ShowsPreview="True" Width="2" Cursor="SizeWE" />

            <g:Chart x:Name="chart" Grid.Column="0" Grid.Row="0" BorderThickness="0" Title="Current Puff" Padding="8 0 8 8" CrosshairVisibility="Visible">
                <g:Chart.Resources>
                    <Style x:Key="LocationLegendStyle" TargetType="Border">
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalAlignment" Value="Top"/>
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="BorderBrush" Value="DarkGray"/>
                        <Setter Property="CornerRadius" Value="5"/>
                    </Style>
                    <Style TargetType="Line" x:Key="gridLineStyle">
                        <Setter Property="Opacity" Value="0.3" />
                    </Style>
                </g:Chart.Resources>
                <g:Chart.Template>
                    <!-- Override the template so we can add things -->
                    <ControlTemplate TargetType="{x:Type g:Chart}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <dv:Title Content="{TemplateBinding Title}" Style="{TemplateBinding TitleStyle}" />
                                <!--  Use a nested Grid to avoid possible clipping behavior resulting from ColumnSpan+Width=Auto  -->
                                <Grid Grid.Row="1" Margin="0,15,0,15">
                                    <dvp:EdgePanel x:Name="ChartArea" Style="{TemplateBinding ChartAreaStyle}">
                                        <Grid x:Name="PlotArea" Canvas.ZIndex="-1" Style="{TemplateBinding PlotAreaStyle}" />
                                        <Border BorderBrush="#FF919191" BorderThickness="1" Canvas.ZIndex="10" />
                                        <Grid Name="PART_CrosshairContainer" Visibility="{TemplateBinding CrosshairVisibility}" Background="Transparent" Canvas.ZIndex="1" MouseMove="CrosshairContainer_MouseMove" MouseLeave="CrosshairContainer_MouseLeave">
                                            <Grid Name="PART_Crosshair">
                                                <Line Name="Vertical" Stroke="Black" X1="{Binding Path=X}" X2="{Binding Path=X}" Y1="0" Y2="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
                                            </Grid>
                                        </Grid>
                                        <Border Name="PART_LocationIndicator" Visibility="Collapsed" />
                                        <Canvas x:Name="SelectionArea" Background="Transparent" />
                                    </dvp:EdgePanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </g:Chart.Template>
                <g:Chart.TitleStyle>
                    <Style TargetType="dv:Title">
                        <Setter Property="FontSize" Value="12pt" />
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="2" />
                    </Style>
                </g:Chart.TitleStyle>
                <g:LineSeries IndependentValuePath="Key" DependentValueBinding="{Binding Path=Value.Temperature, Converter={StaticResource temperatureConverter}}" DependentRangeAxis="{Binding ElementName=yAxisSingleTemperature}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowTemperature, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}"/>
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValueBinding="{Binding Path=Value.TemperatureSetpoint, Converter={StaticResource temperatureConverter}}" DependentRangeAxis="{Binding ElementName=yAxisSingleTemperature}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowTemperatureSetpoint, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorTemperatureSetpoint, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}"/>
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.Power" DependentRangeAxis="{Binding ElementName=yAxisSinglePower}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowPower, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorPower, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}"/>
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.PowerSetpoint" DependentRangeAxis="{Binding ElementName=yAxisSinglePower}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowPowerSetpoint, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorPowerSetpoint, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}"/>
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.Voltage" DependentRangeAxis="{Binding ElementName=yAxisSingleVoltage}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowVoltage, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorVoltage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.Current" DependentRangeAxis="{Binding ElementName=yAxisSingleCurrent}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowCurrent, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorCurrent, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.LiveResistance" DependentRangeAxis="{Binding ElementName=yAxisSingleResistance}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowLiveResistance, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorLiveResistance, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.ColdResistance" DependentRangeAxis="{Binding ElementName=yAxisSingleResistance}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowColdResistance, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorColdResistance, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.BatteryVoltage" DependentRangeAxis="{Binding ElementName=yAxisSingleVoltage}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowBatteryVoltage, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorBatteryVoltage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValueBinding="{Binding Path=Value.BoardTemperature, Converter={StaticResource temperatureConverter}}" DependentRangeAxis="{Binding ElementName=yAxisSingleTemperature}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowBoardTemperature, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorBoardTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValueBinding="{Binding Path=Value.RoomTemperature, Converter={StaticResource temperatureConverter}}" DependentRangeAxis="{Binding ElementName=yAxisSingleTemperature}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowRoomTemperature, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorRoomTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:LineSeries IndependentValuePath="Key" DependentValuePath="Value.BatteryLevel" DependentRangeAxis="{Binding ElementName=yAxisSinglePercentage}" ItemsSource="{Binding GraphData}" Visibility="{Binding ShowBatteryLevel, Converter={StaticResource booleanToVisibilityConverter}, Source={x:Static p:Settings.Default}}">
                    <g:LineSeries.DataPointStyle>
                        <Style TargetType="{x:Type g:DataPoint}">
                            <Setter Property="Background" Value="{Binding ColorBatteryLevel, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}, Mode=OneWay}" />
                            <Setter Property="Template" Value="{x:Null}" />
                        </Style>
                    </g:LineSeries.DataPointStyle>
                </g:LineSeries>
                <g:Chart.Axes>
                    <g:LinearAxis Orientation="X" Minimum="0" Maximum="{Binding MaxOffset}" Interval="1">
                        <g:LinearAxis.AxisLabelStyle>
                            <Style TargetType="g:AxisLabel">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="g:AxisLabel">
                                            <TextBlock DataContext="{TemplateBinding FormattedContent}" Text="{Binding StringFormat={}{0} s}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </g:LinearAxis.AxisLabelStyle>
                    </g:LinearAxis>
                    <g:LinearAxis x:Name="yAxisSingleTemperature" Orientation="Y" Minimum="0" Maximum="{Binding MaxTemp, Converter={StaticResource temperatureConverter}}" Foreground="{Binding GraphColorTemperature, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}}" ShowGridLines="{Binding GraphShowGridLines, Source={x:Static p:Settings.Default}}" Width="{Binding GraphShowAxisTemperature, Converter={StaticResource booleanToLengthConverter}}" Height="{Binding GraphShowAxisTemperature, Converter={StaticResource booleanToLengthConverter}}">
                        <g:LinearAxis.Title>
                            <TextBlock Text="{Binding MaxTemp.Unit, StringFormat={}Temperature (º{0}), Mode=OneWay}" />
                        </g:LinearAxis.Title>
                        <g:LinearAxis.GridLineStyle>
                            <Style TargetType="Line" BasedOn="{StaticResource gridLineStyle}">
                                <Setter Property="Stroke" Value="{Binding Source={x:Static p:Settings.Default}, Path=GraphColorTemperature, Converter={StaticResource colorToSolidBrushConverter}}" />
                            </Style>
                        </g:LinearAxis.GridLineStyle>
                    </g:LinearAxis>
                    <g:LinearAxis x:Name="yAxisSinglePower" Orientation="Y" Title="Power (W)" Minimum="0" Maximum="{Binding MaxPower}" Foreground="{Binding GraphColorPower, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}}" ShowGridLines="{Binding GraphShowGridLines, Source={x:Static p:Settings.Default}}" Width="{Binding GraphShowAxisPower, Converter={StaticResource booleanToLengthConverter}}" Height="{Binding GraphShowAxisPower, Converter={StaticResource booleanToLengthConverter}}">
                        <g:LinearAxis.GridLineStyle>
                            <Style TargetType="Line" BasedOn="{StaticResource gridLineStyle}">
                                <Setter Property="Stroke" Value="{Binding Source={x:Static p:Settings.Default}, Path=GraphColorPower, Converter={StaticResource colorToSolidBrushConverter}}" />
                            </Style>
                        </g:LinearAxis.GridLineStyle>
                    </g:LinearAxis>
                    <g:LinearAxis x:Name="yAxisSingleVoltage" Orientation="Y" Title="Voltage (V)" Minimum="0" Maximum="10" Foreground="{Binding GraphColorVoltage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}}" ShowGridLines="{Binding GraphShowGridLines, Source={x:Static p:Settings.Default}}" Width="{Binding GraphShowAxisVoltage, Converter={StaticResource booleanToLengthConverter}}" Height="{Binding GraphShowAxisVoltage, Converter={StaticResource booleanToLengthConverter}}">
                        <g:LinearAxis.GridLineStyle>
                            <Style TargetType="Line" BasedOn="{StaticResource gridLineStyle}">
                                <Setter Property="Stroke" Value="{Binding Source={x:Static p:Settings.Default}, Path=GraphColorColtage, Converter={StaticResource colorToSolidBrushConverter}}" />
                            </Style>
                        </g:LinearAxis.GridLineStyle>
                    </g:LinearAxis>
                    <g:LinearAxis x:Name="yAxisSingleCurrent" Orientation="Y" Title="Current (A)" Minimum="0" Maximum="40" Foreground="{Binding GraphColorCurrent, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}}" ShowGridLines="{Binding GraphShowGridLines, Source={x:Static p:Settings.Default}}" Width="{Binding GraphShowAxisCurrent, Converter={StaticResource booleanToLengthConverter}}" Height="{Binding GraphShowAxisCurrent, Converter={StaticResource booleanToLengthConverter}}">
                        <g:LinearAxis.GridLineStyle>
                            <Style TargetType="Line" BasedOn="{StaticResource gridLineStyle}">
                                <Setter Property="Stroke" Value="{Binding Source={x:Static p:Settings.Default}, Path=GraphColorCurrent, Converter={StaticResource colorToSolidBrushConverter}}" />
                            </Style>
                        </g:LinearAxis.GridLineStyle>
                    </g:LinearAxis>
                    <g:LinearAxis x:Name="yAxisSingleResistance" Orientation="Y" Title="Resistance (Ω)" Minimum="0" Maximum="3" Foreground="{Binding GraphColorResistance, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}}" ShowGridLines="{Binding GraphShowGridLines, Source={x:Static p:Settings.Default}}" Width="{Binding GraphShowAxisResistance, Converter={StaticResource booleanToLengthConverter}}" Height="{Binding GraphShowAxisResistance, Converter={StaticResource booleanToLengthConverter}}">
                        <g:LinearAxis.GridLineStyle>
                            <Style TargetType="Line" BasedOn="{StaticResource gridLineStyle}">
                                <Setter Property="Stroke" Value="{Binding Source={x:Static p:Settings.Default}, Path=GraphColorResistance, Converter={StaticResource colorToSolidBrushConverter}}" />
                            </Style>
                        </g:LinearAxis.GridLineStyle>
                    </g:LinearAxis>
                    <g:LinearAxis x:Name="yAxisSinglePercentage" Orientation="Y" Title="Battery Level (%)" Minimum="0" Maximum="100" Foreground="{Binding GraphColorPercentage, Source={x:Static p:Settings.Default}, Converter={StaticResource colorToSolidBrushConverter}}" ShowGridLines="{Binding GraphShowGridLines, Source={x:Static p:Settings.Default}}" Width="{Binding GraphShowAxisPercentage, Converter={StaticResource booleanToLengthConverter}}" Height="{Binding GraphShowAxisPercentage, Converter={StaticResource booleanToLengthConverter}}">
                        <g:LinearAxis.GridLineStyle>
                            <Style TargetType="Line" BasedOn="{StaticResource gridLineStyle}">
                                <Setter Property="Stroke" Value="{Binding Source={x:Static p:Settings.Default}, Path=GraphColorPercentage, Converter={StaticResource colorToSolidBrushConverter}}" />
                            </Style>
                        </g:LinearAxis.GridLineStyle>
                    </g:LinearAxis>
                </g:Chart.Axes>
            </g:Chart>
            <Rectangle Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" Visibility="{Binding CurrentDevice, Converter={StaticResource isNullToVisibilityConverterNegate}}" Style="{StaticResource shadeStyle}" />
            <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" Visibility="{Binding CurrentDevice, Converter={StaticResource isNullToVisibilityConverterNegate}}" Panel.ZIndex="10" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24pt" Foreground="White" Text="No Device Connected" />
        </Grid>
    </DockPanel>
</Window>
